# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'
require './lib/gen_node_configs'
require './lib/predicates'

base_dir = File.expand_path(File.dirname(__FILE__))
conf = YAML.load_file(File.join(base_dir, "cluster.yml"))
node_configs = gen_node_configs(conf)

## vagrant plugins required:
# vagrant, vagrant-hosts, vagrant-cachier
Vagrant.configure("2") do |config|

  # https://vagrantcloud.com/puppetlabs/boxes/ubuntu-14.04-64-puppet
  config.vm.box = "puppetlabs/ubuntu-14.04-64-puppet"

  # if you want to use vagrant-cachier,
  # please install vagrant-cachier plugin.
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.enable :apt
  end

  # define VMs. all VMs has identical configuration.
  [node_configs[:zk], node_configs[:master], node_configs[:slave]].flatten.each_with_index do |node, i|
    config.vm.define node[:hostname] do |cfg|

      cfg.vm.provider :virtualbox do |vb, override|
        override.vm.hostname = node[:hostname]
        override.vm.network :private_network, :ip => node[:ip]
        override.vm.provision :hosts

        vb.name = 'vagrant-mesos-' + node[:hostname]
        vb.customize ["modifyvm", :id, "--memory", node[:mem], "--cpus", node[:cpus] ]

        override.vm.provision :shell do |s|
          s.path = "scripts/populate_sshkey.sh"
          s.args = "/root root"
        end

        override.vm.provision :shell do |s|
          s.path = "scripts/populate_sshkey.sh"
          s.args = "/home/vagrant vagrant"
        end
      end

      config.vm.provision "puppet" do |puppet|
        puppet.manifests_path    = "manifests"
        puppet.module_path       = "../modules"
        puppet.hiera_config_path = "../hiera.yaml"
        puppet.options           = "--verbose --debug"

        if master?(node[:hostname]) then
          puppet.manifest_file = "mesos-master.pp"
          puppet.facter = {
            "quorum"    => "#{(node_configs[:master].length.to_f/2).ceil}",
            "zookeeper" => "zk://"+node_configs[:zk].map{|zk| zk[:ip]+":2181"}.join(", ")+"/mesos",
          }
        elsif slave?(node[:hostname]) then
          puppet.manifest_file = "mesos-slave.pp"
          puppet.facter = {
            "zookeeper" => "zk://"+node_configs[:zk].map{|zk| zk[:ip]+":2181"}.join(", ")+"/mesos",
          }
        elsif zk?(node[:hostname]) then
          puppet.manifest_file = "zookeeper.pp"
          puppet.facter = {
            "id"      => (/zk([0-9]+)/.match node[:hostname])[1],
            "servers" => node_configs[:zk].map{|zk| zk[:ip]+":2888:3888"}.join(","),
          }
        end
      end

      # If you wanted use `.dockercfg` file
      # Please place the file simply on this directory
      if File.exist?(".dockercfg")
        config.vm.provision :shell, :priviledged => true, :inline => <<-SCRIPT
          cp /vagrant/.dockercfg /root/.dockercfg
          chmod 600 /root/.dockercfg
          chown root /root/.dockercfg
        SCRIPT
      end
    end
  end
end
